// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using СlothesShopWebApp;

#nullable disable

namespace WearShopWebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240119195208_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WearShopWebApp.Models.Audience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "male"
                        },
                        new
                        {
                            Id = 2,
                            Type = "female"
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AudienceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AudienceId = 1,
                            Name = "Куртки",
                            PhotoPath = "/categoryPhotos/men's jacket.jpeg"
                        },
                        new
                        {
                            Id = 2,
                            AudienceId = 1,
                            Name = "Джинси",
                            PhotoPath = "/categoryPhotos/men's jeans.jpg"
                        },
                        new
                        {
                            Id = 3,
                            AudienceId = 1,
                            Name = "Штани",
                            PhotoPath = "/categoryPhotos/men's pants.jpg"
                        },
                        new
                        {
                            Id = 4,
                            AudienceId = 1,
                            Name = "Світшоти",
                            PhotoPath = "/categoryPhotos/men's sweatshirt.jpg"
                        },
                        new
                        {
                            Id = 5,
                            AudienceId = 1,
                            Name = "Светри"
                        },
                        new
                        {
                            Id = 6,
                            AudienceId = 1,
                            Name = "Футболки"
                        },
                        new
                        {
                            Id = 7,
                            AudienceId = 1,
                            Name = "Сорочки"
                        },
                        new
                        {
                            Id = 8,
                            AudienceId = 1,
                            Name = "Шорти"
                        },
                        new
                        {
                            Id = 9,
                            AudienceId = 2,
                            Name = "Куртки та пальта"
                        },
                        new
                        {
                            Id = 10,
                            AudienceId = 2,
                            Name = "Джинси"
                        },
                        new
                        {
                            Id = 11,
                            AudienceId = 2,
                            Name = "Штани і легінси"
                        },
                        new
                        {
                            Id = 12,
                            AudienceId = 2,
                            Name = "Світшоти"
                        },
                        new
                        {
                            Id = 13,
                            AudienceId = 2,
                            Name = "Светри"
                        },
                        new
                        {
                            Id = 14,
                            AudienceId = 2,
                            Name = "Блузки"
                        },
                        new
                        {
                            Id = 15,
                            AudienceId = 2,
                            Name = "Футболки та топи"
                        },
                        new
                        {
                            Id = 16,
                            AudienceId = 2,
                            Name = "Сукні"
                        },
                        new
                        {
                            Id = 17,
                            AudienceId = 2,
                            Name = "Сорочки"
                        },
                        new
                        {
                            Id = 18,
                            AudienceId = 2,
                            Name = "Спідниці"
                        },
                        new
                        {
                            Id = 19,
                            AudienceId = 2,
                            Name = "Шорти"
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.Clothes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Prise")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Clothes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Count = 5,
                            CreateDate = new DateTime(2024, 1, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            MaterialsDescription = "100% поліестер",
                            Name = "Чоловічий пуховик на блискавці",
                            Prise = 1549f
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothesId")
                        .HasColumnType("int");

                    b.Property<string>("Hex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClothesId");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClothesId = 1,
                            Hex = "#CCC",
                            Name = "Сірий"
                        },
                        new
                        {
                            Id = 2,
                            ClothesId = 1,
                            Hex = "#3d0f0f",
                            Name = "Бордовий"
                        },
                        new
                        {
                            Id = 3,
                            ClothesId = 1,
                            Hex = "#0f144a",
                            Name = "Синій"
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClothesId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TestProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothesId")
                        .HasColumnType("int");

                    b.Property<string>("LocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClothesId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClothesId = 1,
                            LocalPath = "/clothesPhotos/169579534755b6b57ee8d8805234309d890fb7.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ClothesId = 1,
                            LocalPath = "/clothesPhotos/169579534448daa59f7bb9c796ea145ace05723c21_thumbnail_900x.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ClothesId = 1,
                            LocalPath = "/clothesPhotos/1695795342ad226754a58ed6ff5a733f3599bed69b_thumbnail_900x.jpg"
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothesId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClothesId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClothesId = 1,
                            Title = "46 (S)"
                        },
                        new
                        {
                            Id = 2,
                            ClothesId = 1,
                            Title = "48 (M)"
                        },
                        new
                        {
                            Id = 3,
                            ClothesId = 1,
                            Title = "50 (L)"
                        });
                });

            modelBuilder.Entity("WearShopWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Category", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Audience", "Audience")
                        .WithMany("Categories")
                        .HasForeignKey("AudienceId");

                    b.Navigation("Audience");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Clothes", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Category", "Category")
                        .WithMany("Clothes")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Color", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Clothes", "Clothes")
                        .WithMany("Colors")
                        .HasForeignKey("ClothesId");

                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Comment", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Clothes", "Clothes")
                        .WithMany("Comments")
                        .HasForeignKey("ClothesId");

                    b.HasOne("WearShopWebApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Clothes");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Order", b =>
                {
                    b.HasOne("WearShopWebApp.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Photo", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Clothes", "Clothes")
                        .WithMany("Photos")
                        .HasForeignKey("ClothesId");

                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Size", b =>
                {
                    b.HasOne("WearShopWebApp.Models.Clothes", "Clothes")
                        .WithMany("Sizes")
                        .HasForeignKey("ClothesId");

                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Audience", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Category", b =>
                {
                    b.Navigation("Clothes");
                });

            modelBuilder.Entity("WearShopWebApp.Models.Clothes", b =>
                {
                    b.Navigation("Colors");

                    b.Navigation("Comments");

                    b.Navigation("Photos");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("WearShopWebApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
